from eval import evaluate_expression

def _assert_for_expr_eval(expr: str, to_check: bool, expected, real) -> None:
	try:
		assert(to_check)
	except AssertionError:
		print("Test case: " + expr)
		print("Expected: " + expected.__str__() + ", but found: " + real.__str__())

def _test_suit(expr: str, expected_ok: bool, expected_res: float = 0.0) -> None:
	prec = 1e6
	res_str, ok = evaluate_expression(expr)
	_assert_for_expr_eval(expr, ok == expected_ok, expected_ok, ok)
	if (expected_ok and ok):
		res = float(res_str)
		test_result_l = expected_res - prec
		test_result_r = expected_res + prec
		_assert_for_expr_eval(expr, res >= test_result_l and res <= test_result_r, expected_res, res)
			
def test_eval() -> None:
	_test_suit("2 + 3", True, 5)
	_test_suit("7 - 4", True, 3)
	_test_suit("6 * 2", True, 12)
	_test_suit("8 / 2", True, 4)
	_test_suit("3 ^ 2", True, 9)
	_test_suit("5 + 2 * 3", True, 11)
	_test_suit("(5 + 3) * 2", True, 16)
	_test_suit("10 - (2 + 3)", True, 5)
	_test_suit("4 ^ 0.5", True, 2)
	_test_suit("log(100)", True, 2)

	_test_suit("3 + 4 * 2", True, 11)
	_test_suit("(3 + 4) * 2", True, 14)
	_test_suit("10 / 2 + 3", True, 8)
	_test_suit("5 * (2 + 3)", True, 25)
	_test_suit("8 - 3 + 2", True, 7)
	_test_suit("(12 / 4) * (1 + 1)", True, 6)
	_test_suit("5 ^ (1 + 1)", True, 25)
	_test_suit("(2 + 3) ^ 2", True, 25)
	_test_suit("(10 - (1 + 1)) * 3", True, 24)
	_test_suit("log(1000) / log(10)", True, 3)

	_test_suit("sqrt(16)", True, 4)
	_test_suit("sqrt(25)", True, 5)
	_test_suit("log(10)", True, 1)
	_test_suit("log (100)", True, 2)
	_test_suit("log(10000)", True, 4)
	_test_suit("sqrt(9) + log(100)", True, 11)
	_test_suit("(sqrt(36) + log(100)) * 2", True, 22)
	_test_suit("log(1)", True, 0)
	_test_suit("(sqrt(49) - log(10)) * 2", True, 6)
	_test_suit("(sqrt(64) + log(1000)) / 2", True, 8.5)
	_test_suit("sqrt(log(100))", True, 1)

	_test_suit("-2 + 3", True, 1)
	_test_suit("-5 - (-3)", True, -2)
	_test_suit("-6 * -2", True, 12)
	_test_suit("-8 / 2", True, -4)
	_test_suit("(5 - 10) ^ 2", True, 25)
	_test_suit("(log(0.1))", True, -1)
	_test_suit("(sqrt(-16))", False)
	_test_suit("-4 + (-6)", True, -10)
	_test_suit("(2 - (-3)) * (4 - (-1))", True, 25)
	_test_suit("(sqrt(-9))", False)

	_test_suit("1000000 + 2000000", True, 3000000)
	_test_suit("5000000 - 3000000", True, 2000000)
	_test_suit("100000 * 10000", True, 1000000000)
	_test_suit("100000 / 10", True, 10000)
	_test_suit("(1000 ^ 3)", True, 1000000000)
	_test_suit("(log(100000))", True, 5)
	_test_suit("(sqrt(1000000))", True, 1000)
	_test_suit("(2000000 / (500)) * (20)", True, 80000)
	_test_suit("(100000 ^ (1/5))", True, 10)
	_test_suit("(999999 + log(100))", True, 100001)

	_test_suit("2.5 + 3.5", True, 6)
	_test_suit("7.75 - 2.75", True, 5)
	_test_suit("3.5 * 2", True, 7)
	_test_suit("8 / 2.0", True, 4)
	_test_suit("(1.5 ^ 2)", True, 2.25)
	_test_suit("(sqrt(2.25))", True, 1.5)
	_test_suit("(log(10))", True, 1)
	_test_suit("(0.01 * 100)", True, 1)
	_test_suit("(0.5 + 0.5) ^ 2", True, 1)
	_test_suit("(log(100) + log(10))", True, 3)

	_test_suit("(1 + (2 + 3)) * (4 - 1)", True, 15)
	_test_suit("(2 * (3 + (4 - 1)))", True, 12)
	_test_suit("(5 + (6 / (1 + 1))) ^ 2", True, 121)
	_test_suit("(log(10) * (2 + 3))", True, 5)
	_test_suit("(sqrt((16))) + (log(100))", True, 6)
	_test_suit("(10 - (2 * (3 - (1)))) ^ 2", True, 64)
	_test_suit("(sqrt((9) + (16))) ^ (1/2)", True, 5)
	_test_suit("(log(100) + log(1000)) / log(10)", True, 4)
	_test_suit("(10 / (5 - (3))) ^ (2)", True, 25)
	_test_suit("(sqrt((4^2) + (3^2)))", True, 5)

	_test_suit("(0 + 0)", True, 0)
	_test_suit("(0 / 10)", True, 0)
	_test_suit("(log(1))", True, 0)
	_test_suit("(sqrt(0))", True, 0)
	_test_suit("(10 ^ 0)", True, 1)
	_test_suit("(0 ^ 10)", True, 0)
	_test_suit("(log(10^3))", True, 3)
	_test_suit("sqrt(-1)", False)
	_test_suit("log(-10)", False)
	_test_suit("1/0", False)

	_test_suit("(3 + sqrt(16)) * log(100)", True, 20)
	_test_suit("(5 ^ 2) + ((3 * 4) / log(100))", True, 37)
	_test_suit("(8 / sqrt(4)) - log(10)", True, 3)
	_test_suit("(5^2 - log(100)) * sqrt(36)", True, 30)
	_test_suit("(10 * log(10000)) / sqrt(25)", True, 40)
	_test_suit("(7 - sqrt(49) + log(100)) * (6 / 3)", True, 12)
	_test_suit("(8 + (log(100) * sqrt(16))) ^ (1/2)", True, 4)
	_test_suit("(15 / (log(100))) + sqrt((4^2) - (16))", True, 7.5)
	_test_suit("(log(100) - sqrt(9)) * (5 + sqrt(16))", True, -9)
	_test_suit("(sqrt((64) / (16))) ^ log(100)", True, 4)
	
	_test_suit("5 + * 3", False)
	_test_suit("10 / 0", False)
	_test_suit("2 ^", False)
	_test_suit("sqrt -4", False)
	_test_suit("5 + (3 * 2", False)
	_test_suit(") 5 + 2 (", False)
	_test_suit("5 + (3 * 2))", False)
	_test_suit("sqrt()", False)
	_test_suit("2 + 3 # 5", False)
	_test_suit("5 + @ 2", False)
	_test_suit("a + 3", False)
	_test_suit("12 / abc", False)
	_test_suit("* 5 + 3", False)
	_test_suit("5 + (3 - (2 * 1)) )", False)
	_test_suit("5 + (3 - (2 * (1)", False)
	_test_suit("(5 + 3) / (2 -)", False)
	_test_suit("5 ++ 3", False)
	_test_suit("12 log 10", False)
	_test_suit("5 ^ (2 & 3)", False)
	_test_suit("- sqrt 16", False)

	_test_suit("5 % 3", False)
	_test_suit("10 // 3", False)
	_test_suit("5 * *        * 3", False)
	_test_suit("5 +     + 7", False)
	_test_suit("2 -  - 9", False)
	_test_suit("10 & 5", False)
	_test_suit("sqrt^2", False)
	_test_suit("log(100, 2)", False)
	_test_suit("sin(90)", False)
	_test_suit("cos(0)", False)
	_test_suit("tan(45)", False)
	_test_suit("exp(1)", False)

	_test_suit("(5 + 3) * (2 - (4 / (1 + 1))", False)
	_test_suit("(2 + (3 * (4 - (1))", False)
	_test_suit("((5 + (3 * (2 - (1))))", False)
	_test_suit("(5 + (3 * (2 - (1))) / (2 - 1)", False)
	_test_suit("(5 + (3 * (2 - (1)) * (2 - 1))", False)
	_test_suit("/ 5 342 ++ - 3//-- 7/60  % + 1 3s", False)
	_test_suit("(5 + ((3 * 2) - (1) / (0)", False)
	_test_suit("(5 + ((3 * 2) - (1) / )", False)
	_test_suit("(log(100) + sqrt(16) * 2 - )", False)
	_test_suit("(5 + (3 * (2 ^ (4 - 1)))", False)
	_test_suit("(5 + sqrt(16) / log(100)", False)

	_test_suit("(5 % 3) + (10 // 2)", False)
	_test_suit("(sin(90) + log(100, 10))", False)
	_test_suit("(exp(1) - sqrt(4)) * (10 & 5)", False)
	_test_suit("(5 ** 2) / (log(100, 10))", False)
	_test_suit("((10 & 5) + sqrt(16)) / log(10)", False)
	_test_suit("(tan(45) + log(100)) * sqrt(16)", False)
	_test_suit("(10 // 2) + ((3 % 4) * log(100))", False)
	_test_suit("(sin(0) + cos(0)) / log(10, 10)", False)
	_test_suit("((5 ** 0) - sqrt(-1)) + log(-100)", False)

if __name__ == "__main__":
	test_eval()
